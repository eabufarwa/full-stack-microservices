openapi: 3.0.3
info:
  title: Order Service API
  version: 1.0.0
  description: |
    CRUD API for managing orders.
    
    On create, validates product via gRPC and snapshots product fields.
servers:
  - url: /
tags:
  - name: orders
    description: Order resources
paths:
  /api/v1/orders:
    get:
      tags: [orders]
      summary: List orders
      parameters:
        - in: query
          name: enrich
          required: false
          schema:
            type: boolean
          description: Optionally enrich with live product data (demo only)
      responses:
        '200':
          description: A list of orders (with snapshot fields)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      tags: [orders]
      summary: Create order
      parameters:
        - in: header
          name: idempotency-key
          required: false
          schema:
            type: string
          description: Optional idempotency key to de-duplicate requests
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
            examples:
              example:
                value:
                  productId: "7ad8e0a5-2a3c-4d7a-8c3f-1d9f1c5f6a3b"
                  quantity: 2
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v1/orders/{id}:
    get:
      tags: [orders]
      summary: Get by id
      parameters:
        - $ref: '#/components/parameters/PathId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    PathId:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
  responses:
    BadRequest:
      description: Validation error or downstream error (invalid product)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: Invalid product
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
    Order:
      type: object
      required: [id, productId, quantity, status, productName, productPrice, createdAt, updatedAt]
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
          minimum: 1
        status:
          type: string
          enum: [created, processing, shipped, delivered, cancelled]
        productName:
          type: string
        productPrice:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateOrderRequest:
      type: object
      required: [productId, quantity]
      properties:
        productId:
          type: string
          format: uuid
          description: "Product ID to reference"
        quantity:
          type: integer
          minimum: 1
          description: "Order quantity (minimum 1)"

